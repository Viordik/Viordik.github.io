{"version":3,"sources":["index.js"],"names":["btnStart","document","querySelector","game","time","timeHeader","resultHeader","result","gameTime","score","isGameStarted","show","el","classList","remove","hide","add","startGame","setGameTime","setAttribute","style","backgroundColor","interval","setInterval","timeSecond","parseFloat","textContent","clearInterval","endGame","toFixed","renderBox","setGameScore","toString","t","value","start","innerHTML","removeAttribute","handleBoxClick","event","target","dataset","box","console","log","createElement","boxSize","getRandom","boxColor","boxColor2","boxColor3","gameSize","getBoundingClientRect","maxTop","height","maxLeft","width","position","top","left","cursor","insertAdjacentElement","min","max","Math","floor","random","addEventListener"],"mappings":"aAAA,IAAAA,SAAAC,SAAAC,cAAA,UACAC,KAAAF,SAAAC,cAAA,SACAE,KAAAH,SAAAC,cAAA,SACAG,WAAAJ,SAAAC,cAAA,gBACAI,aAAAL,SAAAC,cAAA,kBACAK,OAAAN,SAAAC,cAAA,WACAM,SAAAP,SAAAC,cAAA,cAEAO,MAAA,EACAC,eAAA,EAOA,SAAAC,KAAAC,GACAA,EAAAC,UAAAC,OAAA,QAGA,SAAAC,KAAAH,GACAA,EAAAC,UAAAG,IAAA,QAGA,SAAAC,YACAR,MAAA,EACAS,cACAV,SAAAW,aAAA,WAAA,YACAT,eAAA,EACAK,KAAAf,UACAG,KAAAiB,MAAAC,gBAAA,UAEA,IAAAC,EAAAC,YAAA,WACA,IAAAC,EAAAC,WAAArB,KAAAsB,aAEAF,GAAA,GAEAG,cAAAL,GACAM,WAEAxB,KAAAsB,aAAAF,EAAA,IAAAK,QAAA,IAEA,KAEAC,YAGA,SAAAC,eACAxB,OAAAmB,YAAAjB,MAAAuB,WAGA,SAAAd,cACA,IAAAe,GAAAzB,SAAA0B,MACA9B,KAAAsB,YAAAO,EAAAJ,QAAA,GACAlB,KAAAN,YACAU,KAAAT,cAGA,SAAAsB,UACAlB,eAAA,EACAC,KAAAwB,OACAhC,KAAAiC,UAAA,GACAjC,KAAAiB,MAAAC,gBAAA,UACAV,KAAAL,cACAS,KAAAV,YACAG,SAAA6B,gBAAA,YAEAN,eAGA,SAAAO,eAAAC,GACA7B,eAIA6B,EAAAC,OAAAC,QAAAC,MACAC,QAAAC,IAAAnC,SACAqB,aAIA,SAAAA,YACA3B,KAAAiC,UAAA,GACA,IAAAM,EAAAzC,SAAA4C,cAAA,OACAC,EAAAC,UAAA,GAAA,KACAC,EAAAD,UAAA,EAAA,KACAE,EAAAF,UAAA,EAAA,KACAG,EAAAH,UAAA,EAAA,KACAI,EAAAhD,KAAAiD,wBACAC,EAAAF,EAAAG,OAAAR,EACAS,EAAAJ,EAAAK,MAAAV,EAGAJ,EAAAtB,MAAAkC,OAAAZ,EAAAtB,MAAAoC,MAAAV,EAAA,KACAJ,EAAAtB,MAAAqC,SAAA,WACAf,EAAAtB,MAAAC,gBAAA,OAAA2B,EAAA,KAAAC,EAAA,KAAAC,EAAA,IACAR,EAAAtB,MAAAsC,IAAAX,UAAA,EAAAM,GAAA,KACAX,EAAAtB,MAAAuC,KAAAZ,UAAA,EAAAQ,GAAA,KACAb,EAAAtB,MAAAwC,OAAA,UACAlB,EAAAvB,aAAA,WAAA,QAEAhB,KAAA0D,sBAAA,aAAAnB,GAIA,SAAAK,UAAAe,EAAAC,GACA,OAAAC,KAAAC,MAAAD,KAAAE,UAAAH,EAAAD,GAAAA,GA/FA9D,SAAAmE,iBAAA,QAAAlD,WACAd,KAAAgE,iBAAA,QAAA7B,gBACA9B,SAAA2D,iBAAA,QAAAjD","file":"script.min.js","sourcesContent":["const btnStart = document.querySelector('#start');\nconst game = document.querySelector('#game');\nconst time = document.querySelector('#time');\nconst timeHeader = document.querySelector('#time-header');\nconst resultHeader = document.querySelector('#result-header');\nconst result = document.querySelector('#result');\nconst gameTime = document.querySelector('#game-time');\n\nlet score = 0;\nlet isGameStarted = false;\n\nbtnStart.addEventListener('click', startGame);\ngame.addEventListener('click', handleBoxClick);\ngameTime.addEventListener('input', setGameTime);\n\n\nfunction show(el) {\n  el.classList.remove('hide');\n}\n\nfunction hide(el) {\n  el.classList.add('hide');\n}\n\nfunction startGame() {\n  score = 0;\n  setGameTime();\n  gameTime.setAttribute('disabled', 'disabled');\n  isGameStarted = true;\n  hide(btnStart);\n  game.style.backgroundColor = '#ffffff';\n\n  const interval = setInterval(function() {\n    let timeSecond = parseFloat(time.textContent);\n\n    if (timeSecond <= 0) {\n      //end game\n      clearInterval(interval);\n      endGame();\n    } else {\n      time.textContent = (timeSecond - 0.1).toFixed(1);\n    }\n  }, 100);\n\n  renderBox();\n}\n\nfunction setGameScore() {\n  result.textContent = score.toString();\n}\n\nfunction setGameTime() {\n  let t = +gameTime.value;\n  time.textContent = t.toFixed(1);\n  show(timeHeader);\n  hide(resultHeader);\n}\n\nfunction endGame() {\n  isGameStarted = false;\n  show(start);\n  game.innerHTML = '';\n  game.style.backgroundColor = '#cccccc';\n  show(resultHeader);\n  hide(timeHeader);\n  gameTime.removeAttribute('disabled');\n\n  setGameScore();\n}\n\nfunction handleBoxClick(event) {\n  if (!isGameStarted) {\n    return;\n  }\n\n  if (event.target.dataset.box) {\n    console.log(score++);\n    renderBox();\n  }\n}\n\nfunction renderBox() {\n  game.innerHTML = '';\n  const box = document.createElement('div');\n  const boxSize = getRandom(30, 100);\n  const boxColor = getRandom(0, 255);\n  const boxColor2 = getRandom(0, 255);\n  const boxColor3 = getRandom(0, 255);\n  const gameSize = game.getBoundingClientRect();\n  const maxTop = gameSize.height - boxSize;\n  const maxLeft = gameSize.width - boxSize;\n\n\n  box.style.height = box.style.width = boxSize + 'px';\n  box.style.position = 'absolute';\n  box.style.backgroundColor = `rgb(${boxColor}, ${boxColor2}, ${boxColor3})`;\n  box.style.top = getRandom(0, maxTop) + 'px';\n  box.style.left = getRandom(0, maxLeft) + 'px';\n  box.style.cursor = 'pointer';\n  box.setAttribute('data-box', 'true');\n\n  game.insertAdjacentElement('afterbegin', box);\n}\n\n\nfunction getRandom(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n"]}