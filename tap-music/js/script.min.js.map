{"version":3,"sources":["index.js"],"names":["window","addEventListener","soundElements","document","querySelectorAll","pads","visual","querySelector","rec","play","reset","colors","store","state","arguments","length","undefined","subscribers","getState","subscribe","fn","push","setState","newState","_objectSpread","forEach","makeStore","sounds","isRecord","isPlay","disabled","style","backgroundColor","pad","index","currentTime","createBubbles","oldState","concat","_toConsumableArray","playSounds","sound","shift","once","bubble","createElement","appendChild","animation","removeChild","this"],"mappings":"g2BAAAA,OAAOC,iBAAiB,OAAQ,eACxBC,EAAgBC,SAASC,iBAAiB,UAC1CC,EAAOF,SAASC,iBAAiB,QACjCE,EAASH,SAASI,cAAc,WAChCC,EAAML,SAASI,cAAc,QAC7BE,EAAON,SAASI,cAAc,SAC9BG,EAAQP,SAASI,cAAc,UAC/BI,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WAiCIC,EA9BY,eAACC,EAAe,EAAAC,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACnBG,EAAc,SAsBb,CACLC,SALe,kBACRL,GAKPM,UAtBgB,SAACC,GACC,mBAAPA,GACTH,EAAYI,KAAKD,IAqBnBE,SAjBe,eAACC,EAAkB,EAAAT,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC3BD,EAAQW,EAAA,GACAX,EADoB,mBAAbU,EACGA,EAASV,GACTU,GAElBN,EAAYQ,QAAQ,SAACL,GACnBA,EAAGP,OAeKa,CAAU,CACtBC,OAAQ,GACRC,UAAU,EACVC,QAAQ,IAGVjB,EAAMO,UAAU,SAACN,GACXA,EAAMgB,QAAkC,IAAxBhB,EAAMc,OAAOZ,QAC/BN,EAAKqB,UAAW,EAChBrB,EAAKsB,MAAMC,gBAAkB,SAE7BvB,EAAKqB,UAAW,EAChBrB,EAAKsB,MAAMC,gBAAkB,aAKjC3B,EAAKoB,QAAQ,SAACQ,EAAKC,GACjBD,EAAIhC,iBAAiB,QAAS,WAC5BC,EAAcgC,GAAOC,YAAc,EACnCjC,EAAcgC,GAAOzB,OAErB2B,EAAcF,GAEVtB,EAAMM,WAAWU,UACnBhB,EAAMU,SAAS,SAACe,SAGP,CAAEV,OAFG,GAAAW,OAAAC,EAAOF,EAASV,QAAhB,CAAwBzB,EAAcgC,YAQ1DtB,EAAMO,UAAU,SAACN,GACbL,EAAIuB,MAAMC,gBAAkBnB,EAAMe,SAAW,MAAQ,YAGzDpB,EAAIP,iBAAiB,QAAS,WAC5BW,EAAMU,SAAS,SAACe,SACP,CACLT,UAAWS,EAAST,cA8B1BnB,EAAKR,iBAAiB,QAAS,qBAzBtBuC,QAAWb,EAAa,EAAAb,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,MACL,IAAlBa,EAAOZ,QAQNH,EAAMM,WAAWW,QACpBjB,EAAMU,SAAS,CACbO,QAAQ,QAINY,EAAQd,EAAOe,QAErBD,EAAMN,YAAc,EACpBM,EAAMhC,OAENgC,EAAMxC,iBAAiB,QAAS,WAC9BuC,EAAWb,IACV,CAAEgB,MAAM,SApBT/B,EAAMU,SAAS,CACbO,QAAQ,IAuBZW,CAAUD,EAAK3B,EAAMM,WAAWS,WAGlCjB,EAAMT,iBAAiB,QAAS,WAC9BW,EAAMU,SAAS,CACbK,OAAQ,WAKNS,EAAgB,SAACF,OACfU,EAASzC,SAAS0C,cAAc,OACtCvC,EAAOwC,YAAYF,GACnBA,EAAOb,MAAMC,gBAAkBrB,EAAOuB,GACtCU,EAAOb,MAAMgB,UAAY,eACzBH,EAAO3C,iBAAiB,eAAgB,WACtCK,EAAO0C,YAAYC,SAIvBrC,EAAMU,SAAS","file":"script.min.js","sourcesContent":["window.addEventListener('load', () => {\n  const soundElements = document.querySelectorAll('.sound');\n  const pads = document.querySelectorAll('.pad');\n  const visual = document.querySelector('.visual');\n  const rec = document.querySelector('.rec');\n  const play = document.querySelector('.play');\n  const reset = document.querySelector('.reset');\n  const colors = [\n    '#60d394',\n    '#d36060',\n    '#c060d3',\n    '#d3d160',\n    '#6860d3',\n    '#60b2d3'\n  ];\n\n  const makeStore = (state = {}) => {\n    const subscribers = [];\n\n    const subscribe = (fn) => {\n      if (typeof fn === 'function') {\n        subscribers.push(fn);\n      }\n    };\n\n    const setState = (newState = {}) => {\n      state = typeof newState === 'function'\n        ? {...state, ...newState(state)}\n        : {...state, ...newState};\n\n      subscribers.forEach((fn) => {\n        fn(state);\n      });\n    };\n\n    const getState = () => {\n      return state;\n    };\n\n    return {\n      getState,\n      subscribe,\n      setState\n    };\n  };\n\n  const store = makeStore({\n    sounds: [],\n    isRecord: false,\n    isPlay: false\n  });\n\n  store.subscribe((state) => {\n    if (state.isPlay || state.sounds.length === 0) {\n      play.disabled = true\n      play.style.backgroundColor = 'gray';\n    } else {\n      play.disabled = false;\n      play.style.backgroundColor = '#add8e6';\n    }\n  });\n\n  //Перебераем список с цветными падами и навешиваем обработчик на каждый пад и функцию воспроизвдения музыки\n  pads.forEach((pad, index) => {\n    pad.addEventListener('click', function() {\n      soundElements[index].currentTime = 0; //Запускаем проеигравание музыки с начала, при повторном нажатие на pad или многократном нажатие\n      soundElements[index].play();\n\n      createBubbles(index); //Создание шарика\n\n      if (store.getState().isRecord) {\n        store.setState((oldState) => {\n          const sounds = [...oldState.sounds, soundElements[index]];\n\n          return { sounds };\n        });\n      }\n    });\n  });\n\n  store.subscribe((state) => {\n      rec.style.backgroundColor = state.isRecord ? 'red' : '#add8e6'; //Если isRecord = true то присваиваем background красный цвет, т.е. при нажатие на кнопку rec background будет красным\n  });\n\n  rec.addEventListener('click', function() {\n    store.setState((oldState) => {\n      return {\n        isRecord: !oldState.isRecord\n      };\n    });\n  });\n\n  function playSounds(sounds = []) {\n    if (sounds.length === 0) {\n      store.setState({\n        isPlay: false\n      });\n\n      return;\n    }\n\n    if (!store.getState().isPlay) {\n      store.setState({\n        isPlay: true\n      })\n    }\n\n    const sound = sounds.shift();\n\n    sound.currentTime = 0;\n    sound.play();\n\n    sound.addEventListener('ended', () => {\n      playSounds(sounds);\n    }, { once: true });\n  }\n\n  play.addEventListener('click', function() {\n    playSounds([...store.getState().sounds]);\n  });\n\n  reset.addEventListener('click', function() {\n    store.setState({\n      sounds: []\n    });\n  });\n\n  //Функция для создания цветного шарика\n  const createBubbles = (index) => {\n    const bubble = document.createElement('div');\n    visual.appendChild(bubble);\n    bubble.style.backgroundColor = colors[index];\n    bubble.style.animation = 'jump 1s ease';\n    bubble.addEventListener('animationend', function() {\n      visual.removeChild(this);\n    });\n  };\n\n  store.setState({});\n});\n"]}